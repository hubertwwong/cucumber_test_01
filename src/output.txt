#encoding: utf-8
Feature: Showcase the simplest possible Cucumber scenario
  In order to verify that cucumber is installed and configured correctly
  As an aspiring BDD fanatic 
  I should be able to run this scenario and see that the steps pass (green like a cuke)

  Scenario: Cutting vegetables          # features/first.feature:7
    Given a cucumber that is 30 cm long # features/step_definitions/first_feature.rb:1
    When I cut it in halves             # features/step_definitions/first_feature.rb:6
    Then I have two cucumbers           # features/step_definitions/first_feature.rb:13
    And both are 15 cm long             # features/step_definitions/first_feature.rb:18

#encoding: utf-8
Feature: Foo.rb test. Seeing if a file would load.

  Scenario: hello                 # features/foo.feature:4
    Given a call to hello         # features/step_definitions/foo_feature.rb:3
    When I call the hello method  # features/step_definitions/foo_feature.rb:7
    Then I get the response world # features/step_definitions/foo_feature.rb:11

  Scenario: plus_two                            # features/foo.feature:9
    Given a call to plus_two                    # features/step_definitions/foo_feature.rb:15
    When I call plus_two with 8 as the argument # features/step_definitions/foo_feature.rb:19
    Then I get 10 as the response               # features/step_definitions/foo_feature.rb:23

#encoding: utf-8
Feature: Google.com test

  Scenario: View home page         # features/google.feature:4
    Given I am on the home page    # features/google.feature:5
    When I fill in "q" with "dogs" # features/step_definitions/google_feature.rb:6
    Then I should see "Google"     # features/step_definitions/google_feature.rb:10

4 scenarios (1 undefined, 3 passed)
13 steps (2 skipped, 1 undefined, 10 passed)
0m0.195s

You can implement step definitions for undefined steps with these snippets:

Given(/^I am on the home page$/) do
  pending # express the regexp above with the code you wish you had
end

